@page "/fetchdata"
@implements IDisposable

@using Blazor.EditForms.Web.Data

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (this.ViewService.Records == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in this.ViewService.Records)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => EditRecord(forecast.ID)">Edit</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<WeatherForecast> forecasts;

    [Inject] private WeatherForecastViewService ViewService { get; set; }

    [Inject] private NavigationManager NavManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await this.ViewService.GetWeatherForcastsAsync();
        this.ViewService.ListChanged += this.OnListUpdated;
    }

    private void OnListUpdated(object sender, EventArgs e)
            => this.InvokeAsync(StateHasChanged);

    private void EditRecord(Guid id)
        => this.NavManager.NavigateTo($"/WeatherEditor/{id}");

    public void Dispose()
        =>  this.ViewService.ListChanged -= this.OnListUpdated;
}
